<template>
<view class="container">
  <view>
    <view class="mt20" >
      <view class="news-item">
        <view>
          <text class="xxl default"> 考试人</text>
          <text class="xxl primary">  {{oId}}</text>
        </view>
        <view><button wx:if="{{soid}}" class="my-mini-btn mt6" type="default"  bindtap='followCancel'>取消关注</button></view>
      </view>
    </view>
    <view class="mt20">
      <repeat for="{{page.list}}" key="index" index="index" item="item">
      <view class="news-item">
        <view>
          <view>
            <text class="ml20 xxl" maxlength='40'>{{item.examName}}</text>
          </view>
          <view>
            <text class="ml20 xl" >{{item.createDate==null?'':item.createDate}}</text>
          </view>
        </view>
        <view>
          <text class="xxl mr20" >{{item.score}} 分</text>
        </view>
       </view>
      </repeat> 
    </view>
  </view>
    <!--操作栏-->
    <ActionBar @tap.user="retExamList" @answer.user="examAnswer" @back.user="back"examListText="考试列表" answerText="查看答案" noCancel="1"/> 

</view>
</template>
        

<script>
  import wepy from 'wepy';
  import auth from '../../api/auth';
  import exam from '../../api/exam';
  import base from '../../mixins/base';
  import Tips from '../../utils/Tips';
  import pagination from '../../mixins/pagination';
  import Placeholder from '../../components/common/placeholder';
  import ActionBar from '../../components/common/action_bar';

  export default class ScoreList extends wepy.page {
    def = {
      examId:null,
      oId:null,
      soid:null,
      page: {
        list: []
      },
      init: false
    };
    data = {...this.def};
    async onLoad (option) {
      try{
        console.info("option",option);
        var openId;
        if(option.soid){
          this.soid=option.soid;
          openId=option.soid;
        }else{
          openId = auth.getConfig('openId');
          if (openId == null) {
            openId=await auth.jscode2session();
            await auth.setConfig('openId', openId);
          }          
        }
        var formIds = wepy.$instance.globalData.globalFormIds;  // 获取全局推送码
         if (formIds.length>0) {
            formIds = JSON.stringify(formIds);  // 转换成JSON字符串
            wepy.$instance.globalData.globalFormIds = [];  
            await exam.uploadFormIds(formIds);
        }
        this.page = exam.scoreList(openId);
        console.info("this.page",this.page);
        this.oId=option.phone;
        await this.next();
      } catch (e) {
        Tips.modal(e.message);
      } finally {
        this.loaded();
      }
    };


    methods = {
      retExamList(info) {
        console.info("info",info);
        if(info.formId !=null && info.formId != "the formId is a mock one"){
          exam.collectFormIds(info.formId);
        }
        this.$switch('../home/examList');
      },
      back(info) {
        console.info("info",info);
        if(info.formId !=null && info.formId != "the formId is a mock one"){
          exam.collectFormIds(info.formId);
        }
        wepy.navigateBack();
      },

      async followCancel() {
        try{
          if(this.soid!=null){
            var openId = auth.getConfig('openId');
            if (openId == null) {
              openId=await auth.jscode2session();
              await auth.setConfig('openId', openId);
            }          

            var data=await auth.followCancel(this.soid,openId);
            if(data.success==true){
              this.soid=null;
              await Tips.success("已取消");
              this.$switch('../home/myproject');
            }else{
              Tips.error("失败");
            }
          }
        } catch (e) {
          Tips.error(e.message);
        } finally {
          this.loaded();
        }
      },
      examAnswer(info) {
        console.info("info",info);
        if(info.formId !=null && info.formId != "the formId is a mock one"){
          exam.collectFormIds(info.formId);
        }
        this.$root.$navigate('/pages/exam/examAnswer', {examId: this.examId});        
      }
    };

    mixins = [base, pagination];
    config = {
      navigationBarTitleText: '成绩'
    };
    components = {
      Placeholder: Placeholder,
      ActionBar: ActionBar
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
.curdate-block{
  display: flex;
  justify-content: space-between;
  margin-top: 20px;
  width: 100%;
}

.order{
  margin-left: 35rpx;
}
</style>
